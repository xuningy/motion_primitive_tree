#!/usr/bin/env python
PACKAGE = "motion_primitive_tree"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("tree_size", int_t, 0, "Tree size (in most cases this is the number of nodes)",  100, 2, 300)
gen.add("sample_batch_size", int_t, 0, "number of nodes to sample from the Elite Sample Set",  1, 1, 30)
gen.add("elite_set_size", int_t, 0, "size of the Elite Sample Set",  15, 1, 1000)
gen.add("softmax_on", bool_t, 0, "Softmax on cost", True)
gen.add("beta", double_t, 0, "Beta parameter of the soft max",  0.5, 0.0, 10.0)

gen.add("w_smooth", double_t, 0, "Weight on cost function that penalize changes in curvature.", 1.0, 0.0, 30.0)
gen.add("w_straightline", double_t, 0, "Weight on cost function that penalize any curvature", 1.0, 0.0, 30.0)
gen.add("w_direction", double_t, 0, "Weight on cost function that penalize trajectories that are too far away from current heading. Normalized by duration",  0.0, 0.0, 30.0)
gen.add("w_input", double_t, 0, "Weight on cost function of the trajectory with respect to an input (given that the two inputs are specified in the same frame)",  0.0, 0.0, 30.0)

gen.add("w_speed", double_t, 0, "Weight on cost function that penalize slower trajectories (avg per segment)",  1.0, 0.0, 30.0)
gen.add("w_duration", double_t, 0, "Weight on cost function that penalizes trajectories with short segments (avg per segment)",  0.0, 0.0, 30.0)
gen.add("w_length", double_t, 0, "Weight on cost function that penalizes trajectories with shorter length",  0.0, 0.0, 30.0)

gen.add("w_goal", double_t, 0, "Weight on cost function that penalize distance of the final point to the goal",  0.0, 0.0, 30.0)
gen.add("w_point", double_t, 0, "Weight on cost function that penalize distance along a trajectory to a point",  0.0, 0.0, 30.0)
gen.add("w_deviation", double_t, 0, "Weight on deviation",  0.0, 0.0, 30.0)

gen.add("global_goal_x", int_t, 0, "Goal in x", 18, -50, 50);
gen.add("global_goal_y", int_t, 0, "Goal in y", 0, -30, 30);
gen.add("global_goal_z", int_t, 0, "Goal in z", 1, 0, 30);

gen.add("vx", double_t, 0, "vx", 1.0, -5.0, 5.0);
gen.add("omega", double_t, 0, "omega", 0.0, -2.0, 2.0);
gen.add("vz", double_t, 0, "vz", 0.0, -5.0, 5.0);


exit(gen.generate(PACKAGE, "motion_primitive_tree", "CostFunctionWeights"))
